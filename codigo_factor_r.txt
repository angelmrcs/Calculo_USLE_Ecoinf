############   R   ############
### Calculating R factor (*Spatial interpolation*)

#The starting point is a .csv file called "R_anda_oriental.csv" that contains a list of points with R values associated. Each point corresponds to a meteorological station. The extent of this file is East Andalusia. We will use kriging as a way to interpolate point R values 


# ESTABLISH WORKING DIRECTORY
setwd("~/Sync/CGRBIO/a_academico/Ecoinformatica/sesion_12_interpolacion_R/factor_r/R")

# INSTALLING AND LOADING REQUIRED PACKAGES

list_packages<-c("sp", "ggplot2", "rgdal", "automap", "aspace","gstat")
install.packages(list_packages, dep=TRUE)
library(sp)
library(rgdal)
library(automap)
library(ggplot2)
library(aspace)
library(gstat)

#IMPORTING CSV FILE WITH "R" VALUES. PLOTTING THE DISTRIBUTION OF METEOROLOGICAL STATIONS

lista_R<-read.table("R_anda_oriental.csv", dec=",", header=T, sep = ';')

ggplot (lista_R, aes(X,Y))+geom_point(aes(size=R), color="blue", alpha=3/4)+ggtitle("Distribuci??n de R en Andaluc??????a oriental")+
  coord_equal()+theme_bw()

# USING "aspace" PACKAGE TO CALCULATE STANTDARD DEVIATION ELLIPSE. THIS TOOL IS USEFUL TO DETERMINE WHETHER OUR STUDY AREA IS AFFECTED BY THE BORDER EFFECT

calc_sde(id=1, filename="SDE_Output.txt", centre.xy=NULL, calccentre=TRUE,
         points=data.frame(lista_R$X,lista_R$Y))
plot_sde(plotnew = TRUE)

elipse_shp<-convert.to.shapefile(sdeloc,sdeatt, "id",5)
write.shapefile(elipse_shp,"elipse_shp")

# CONVERT DATAFRAME TO A SPDF (SPATIAL DATAFRAME)

coordinates(lista_R)<-~ X + Y

# VISUALIZING THE VARIOGRAM
#distrib R (erosibilidad de lluvia) no normal -> log

R.vgm<-variogram(log(R)~1, lista_R)
plot(R.vgm)


# SETTING UP NEW GRID

setwd("~/Sync/CGRBIO/a_academico/Ecoinformatica/sesion_12_interpolacion_R/factor_r/R/area_estudio")
area_estudio<-readOGR(dsn=".", layer='area_estudio_23030')
grid <- makegrid(area_estudio, cellsize = 100)
gridded(grid) =~ x1+x2

setwd("~/Sync/CGRBIO/a_academico/Ecoinformatica/sesion_12_interpolacion_R/factor_r/R")

# PERFORMING ORDINDARY KRIGING (using global autoKrige-function; no need for fitted variogram as imput)

kriging_result = autoKrige(R~1, lista_R, grid)
plot(kriging_result) 

#REPROJECTING TO DESIRED CSR (IPSG 23030)

proj4string(lista_R) <- "+proj=utm +zone=30 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs"
is.projected(lista_R)

# EXPORTING INTERPOLATED R LAYER

kriging.pred <- kriging_result$krige_output
writeGDAL(kriging.pred["var1.pred"], "factor_r.asc")